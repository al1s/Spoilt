// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spoilt.Data;

namespace Spoilt.Migrations
{
    [DbContext(typeof(SpoiltDbContext))]
    partial class SpoiltDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spoilt.Models.Movie", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Genre");

                    b.Property<string>("Plot");

                    b.Property<string>("Poster");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Spoilt.Models.Spoiler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("MovieID");

                    b.Property<string>("SpoilerText");

                    b.Property<int>("Votes");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.ToTable("Spoilers");
                });

            modelBuilder.Entity("Spoilt.Models.UserSession", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("ID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Spoilt.Models.Vote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("MovieID");

                    b.Property<int>("SpoilerID");

                    b.Property<string>("UserSessionID");

                    b.HasKey("ID");

                    b.HasIndex("UserSessionID");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Spoilt.Models.Spoiler", b =>
                {
                    b.HasOne("Spoilt.Models.Movie", "Movie")
                        .WithMany("Spoilers")
                        .HasForeignKey("MovieID");
                });

            modelBuilder.Entity("Spoilt.Models.Vote", b =>
                {
                    b.HasOne("Spoilt.Models.UserSession", "UserSession")
                        .WithMany("Votes")
                        .HasForeignKey("UserSessionID");
                });
#pragma warning restore 612, 618
        }
    }
}
